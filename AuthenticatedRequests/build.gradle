plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'maven-publish'
    id 'com.jfrog.artifactory'
    id 'org.jetbrains.kotlin.plugin.serialization'
}

def libraryVersion = '1.0.11'

android {
    namespace 'net.aliaslab.authenticatedrequests'
    compileSdk 33

    defaultConfig {
        minSdk 23
        targetSdk 33

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"

    }

    buildTypes {

        codedebug {
            minifyEnabled false
            testCoverageEnabled false
            // proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField("String", "VERSION_NAME", "\"${defaultConfig.versionName}\"")
        }
        debug {
            minifyEnabled false
            testCoverageEnabled true
            // proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField("String", "VERSION_NAME", "\"${defaultConfig.versionName}\"")
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField("String", "VERSION_NAME", "\"${defaultConfig.versionName}\"")
        }

    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.security:security-crypto-ktx:1.1.0-alpha06'
    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:latest.release'
    implementation project(path: ':app')
    testImplementation 'junit:junit:4.13.2'
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test"

    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    androidTestImplementation project(path: ':AuthenticatedRequests')
}

publishing {
    publications {
        aar(MavenPublication) {
            groupId 'net.aliaslab'
            version libraryVersion
            artifactId project.getName()

            if (libraryVersion.endsWith('DEBUG')) {
                artifact("$buildDir/outputs/aar/${project.getName()}-codedebug.aar")
            } else {
                artifact("$buildDir/outputs/aar/${project.getName()}-release.aar")
            }

            pom.withXml {
                def dependencies = asNode().appendNode('dependencies')
                configurations.getByName("releaseCompileClasspath").getResolvedConfiguration().getFirstLevelModuleDependencies().each {
                    def dependency = dependencies.appendNode('dependency')
                    dependency.appendNode('groupId', it.moduleGroup)
                    dependency.appendNode('artifactId', it.moduleName)
                    dependency.appendNode('version', it.moduleVersion)
                }
            }
        }
    }
}


artifactory {
    contextUrl = 'https://artifactory-new.aliaslab.net/artifactory'
    publish {
        repository {
            repoKey = libraryVersion.endsWith('SNAPSHOT') ? 'AuthenticatedRequests_Android_Snapshot' : libraryVersion.endsWith('DEBUG') ? 'AuthenticatedRequests_Android_Debug' : 'AuthenticatedRequests_Android_Release'

            username = project.findProperty('artifactoryUser') ?: 'user'
            password = project.findProperty('artifactoryPassword') ?: 'password'
        }
        defaults {
            // Tell the Artifactory Plugin which artifacts should be published to Artifactory.
            publications('aar')
            publishArtifacts = true

            // Publish generated POM files to Artifactory (true by default)
            publishPom = true
        }
    }
}